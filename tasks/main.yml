---
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure containerd is installed.
  package:
    name: "{{ containerd_package }}"
    state: "{{ containerd_package_state }}"

- name: Ensure containerd is started and enabled at boot.
  service:
    name: containerd
    state: "{{ containerd_service_state }}"
    enabled: "{{ containerd_service_enabled }}"

- name: Ensure containerd config directory exists.
  file:
    path: /etc/containerd
    state: directory
  register: containerd_dir

- name: Check if the containerd default config exists.
  stat:
    path: "/etc/containerd/config-default.toml"
  register: containerd_default_config_stat

- name: Get defaults from containerd.
  shell: "containerd config default > /etc/containerd/config-default.toml"
  when: not containerd_default_config_stat.stat.exists

- name: Copy the defaults over to /etc/containerd/config.toml
  copy:
    remote_src: true
    src: /etc/containerd/config-default.toml
    dest: /etc/containerd/config.toml
  when: not containerd_default_config_stat.stat.exists
  notify: restart containerd

- name: Set Cgroup driver to systemd
  lineinfile:
    regexp: '^(\s*)SystemdCgroup\s*='
    line: '\1SystemdCgroup = {{ containerd_config_cgroup_driver_systemd | to_json }}'
    backrefs: 'yes'
    state: present
    path: /etc/containerd/config.toml
  notify: restart containerd

- name: Set the default snapshotter
  lineinfile:
    regexp: '^(\s*)snapshotter\s*='
    line: '\1snapshotter = "{{ containerd_config_default_snapshotter }}"'
    backrefs: 'yes'
    state: present
    path: /etc/containerd/config.toml
  notify: restart containerd

- name: Ensure /etc/systemd/system/containerd.service.d exists
  file:
    path: "/etc/systemd/system/containerd.service.d"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: containerd_systemd_slice != 'system.slice'

- name: Set the systemd slice of the containerd service
  template:
    src: "containerd-slice.conf.j2"
    dest: "/etc/systemd/system/containerd.service.d/slice.conf"
    owner: root
    group: root
    mode: 0644
  when: containerd_systemd_slice != 'system.slice'

- name: Ensure /etc/systemd/system/run-containerd-runc-.mount.d exists
  file:
    path: "/etc/systemd/system/run-containerd-runc-.mount.d"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Silence the constant containerd mount noise from systemd
  copy:
    src: "silence-containerd-mounts.conf"
    dest: "/etc/systemd/system/run-containerd-runc-.mount.d/silence-containerd-mounts.conf"
    owner: root
    group: root
    mode: 0644

- name: Ensure containerd is restarted immediately if necessary.
  meta: flush_handlers
